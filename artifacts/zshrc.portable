# 🐚 ZSH Setup -------------------------------------------------------------
export ZSH="${ZSH:-$HOME/.oh-my-zsh}"
export PATH="/usr/bin:$HOME/.local/bin:$PATH"

# 🖼️ Theme & Prompt -------------------------------------------------------
PROMPT=''
RPROMPT=''
# Minimal, colorized, emoji-friendly prompt (keeps original styling)
PROMPT=$'%F{green}┌───(%F{blue}%n👋😅🪄 %F{blue}%m%F{green})-[%F{magenta}%~%F{green}]\n└─%F{blue}$%f '

# 🧠 Prompt Reset Hook ----------------------------------------------------
TRAPALRM() { zle reset-prompt; }

# 🧩 Plugins & Add-ons ----------------------------------------------------
# Safe default plugin set; installs can be vendored or OS-provided.
plugins=(git sudo command-not-found common-aliases zsh-syntax-highlighting zsh-autosuggestions)
fpath+=("$ZSH/plugins/emoji-clock")

# Load oh-my-zsh if present
if [ -s "$ZSH/oh-my-zsh.sh" ]; then
  source "$ZSH/oh-my-zsh.sh"
fi

# Resilient plugin sourcing (supports apt or custom locations)
if [ -r "/usr/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh" ]; then
  source "/usr/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh"
elif [ -r "${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh" ]; then
  source "${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh"
fi

if [ -r "/usr/share/zsh-autosuggestions/zsh-autosuggestions.zsh" ]; then
  source "/usr/share/zsh-autosuggestions/zsh-autosuggestions.zsh"
elif [ -r "${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh" ]; then
  source "${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh"
fi

# 🔍 Highlighting Rules ---------------------------------------------------
ZSH_HIGHLIGHT_HIGHLIGHTERS=(main brackets pattern)

ZSH_HIGHLIGHT_STYLES[default]=none
ZSH_HIGHLIGHT_STYLES[unknown-token]='fg=red,bold'
ZSH_HIGHLIGHT_STYLES[reserved-word]='fg=cyan,bold'
ZSH_HIGHLIGHT_STYLES[suffix-alias]='fg=green,underline'
ZSH_HIGHLIGHT_STYLES[global-alias]='fg=green,bold'
ZSH_HIGHLIGHT_STYLES[precommand]='fg=green,underline'
ZSH_HIGHLIGHT_STYLES[commandseparator]='fg=blue,bold'
ZSH_HIGHLIGHT_STYLES[autodirectory]='fg=green,underline'
ZSH_HIGHLIGHT_STYLES[path]='fg=magenta,bold'
ZSH_HIGHLIGHT_STYLES[path_error]='fg=red,bold'
ZSH_HIGHLIGHT_STYLES[globbing]='fg=blue,bold'
ZSH_HIGHLIGHT_STYLES[history-expansion]='fg=blue,bold'
ZSH_HIGHLIGHT_STYLES[command-substitution]=none
ZSH_HIGHLIGHT_STYLES[command-substitution-delimiter]='fg=magenta,bold'
ZSH_HIGHLIGHT_STYLES[process-substitution]=none
ZSH_HIGHLIGHT_STYLES[process-substitution-delimiter]='fg=magenta,bold'
ZSH_HIGHLIGHT_STYLES[single-hyphen-option]='fg=green'
ZSH_HIGHLIGHT_STYLES[double-hyphen-option]='fg=green'
ZSH_HIGHLIGHT_STYLES[back-quoted-argument]=none
ZSH_HIGHLIGHT_STYLES[back-quoted-argument-delimiter]='fg=blue,bold'
ZSH_HIGHLIGHT_STYLES[single-quoted-argument]='fg=yellow'
ZSH_HIGHLIGHT_STYLES[double-quoted-argument]='fg=yellow'
ZSH_HIGHLIGHT_STYLES[dollar-quoted-argument]='fg=yellow'
ZSH_HIGHLIGHT_STYLES[rc-quote]='fg=magenta'
ZSH_HIGHLIGHT_STYLES[dollar-double-quoted-argument]='fg=magenta,bold'
ZSH_HIGHLIGHT_STYLES[back-double-quoted-argument]='fg=magenta,bold'
ZSH_HIGHLIGHT_STYLES[back-dollar-quoted-argument]='fg=magenta,bold'
ZSH_HIGHLIGHT_STYLES[redirection]='fg=blue,bold'
ZSH_HIGHLIGHT_STYLES[comment]='fg=black,bold'
ZSH_HIGHLIGHT_STYLES[arg0]='fg=cyan'
ZSH_HIGHLIGHT_STYLES[bracket-error]='fg=red,bold'
ZSH_HIGHLIGHT_STYLES[bracket-level-1]='fg=blue,bold'
ZSH_HIGHLIGHT_STYLES[bracket-level-2]='fg=green,bold'
ZSH_HIGHLIGHT_STYLES[bracket-level-3]='fg=magenta,bold'
ZSH_HIGHLIGHT_STYLES[bracket-level-4]='fg=yellow,bold'
ZSH_HIGHLIGHT_STYLES[bracket-level-5]='fg=cyan,bold'
ZSH_HIGHLIGHT_STYLES[cursor-matchingbracket]=standout

# 🛠️ Practical Aliases (portable/safe) -----------------------------------
alias py=python3
alias ll='ls -alF'
alias la='ls -A'
alias l='ls -CF'

# ✂️ Bracketed Paste Safety ----------------------------------------------
if [[ $- == *i* ]]; then
  autoload -Uz bracketed-paste-magic
  zle -N bracketed-paste bracketed-paste-magic
fi

# 📁 PATH Setup (portable) ------------------------------------------------
# Add $HOME/bin if present
export PATH="$HOME/bin:$PATH"

# 🌐 SDKMAN (optional; portable path) -------------------------------------
export SDKMAN_DIR="${SDKMAN_DIR:-$HOME/.sdkman}"
[[ -s "$SDKMAN_DIR/bin/sdkman-init.sh" ]] && source "$SDKMAN_DIR/bin/sdkman-init.sh"

# 🧬 NVM (Node Version Manager) ------------------------------------------
export NVM_DIR="${NVM_DIR:-$HOME/.nvm}"
[ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"
[ -s "$NVM_DIR/bash_completion" ] && . "$NVM_DIR/bash_completion"

# 🧠 Pyenv Setup ----------------------------------------------------------
export PYENV_ROOT="${PYENV_ROOT:-$HOME/.pyenv}"
command -v pyenv >/dev/null || export PATH="$PYENV_ROOT/bin:$PATH"
eval "$(pyenv init --path 2>/dev/null || true)"
eval "$(pyenv init - 2>/dev/null || true)"

# 🖼️ Display (WSL-safe defaults) -----------------------------------------
export DISPLAY="${DISPLAY:-:0}"
export LIBGL_ALWAYS_INDIRECT="${LIBGL_ALWAYS_INDIRECT:-1}"

# 🔐 Secrets Loader (user-provided, private) ------------------------------
# Create ~/.env.secrets with chmod 600 to load custom tokens safely.
if [ -f "$HOME/.env.secrets" ]; then
  set -o allexport; source "$HOME/.env.secrets"; set +o allexport
fi

# 🧷 SSH-Agent (opt-in; no hardcoded key names) ---------------------------
if [[ -z "$SSH_AUTH_SOCK" && -z "$GM_DISABLE_SSH_AGENT" ]]; then
  if command -v ssh-agent >/dev/null; then
    eval "$(ssh-agent -s)" >/dev/null 2>&1
    # To add a key: ssh-add ~/.ssh/id_ed25519  (done by the user)
  fi
fi

# VS Code Shell Integration (portable) ------------------------------------
if [[ "$TERM_PROGRAM" == "vscode" ]]; then
  for p in "$HOME/.vscode-server/bin"/*/out/vs/workbench/contrib/terminal/common/scripts/shellIntegration-rc.zsh; do
    [ -r "$p" ] && . "$p" && break
  done
fi
